<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="77947" started-at="2020-07-03T16:25:53 IST" finished-at="2020-07-03T16:27:11 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="77947" started-at="2020-07-03T16:25:53 IST" finished-at="2020-07-03T16:27:11 IST">
      <class name="com.SmokeTestSuiteCLass.VerifyPageTitle">
        <test-method status="PASS" signature="verifyPageTitle(java.util.Hashtable)[pri:0, instance:com.SmokeTestSuiteCLass.VerifyPageTitle@12cdcf4]" name="verifyPageTitle" duration-ms="6464" started-at="2020-07-03T16:26:26 IST" description="checks the webpage title" data-provider="EMICalculatorTestSmokeSuiteDriverTitleData" finished-at="2020-07-03T16:26:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{title=EMI Calculator for Home Loan, Car Loan & Personal Loan in India}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.SmokeTestSuiteCLass.VerifyPageTitle@12cdcf4]" name="flushReports" is-config="true" duration-ms="4211" started-at="2020-07-03T16:26:33 IST" finished-at="2020-07-03T16:26:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.SmokeTestSuiteCLass.VerifyPageTitle -->
      <class name="com.SmokeTestSuiteCLass.IsCarLoanElementPresent">
        <test-method status="PASS" signature="isCarLoanElementPresent()[pri:0, instance:com.SmokeTestSuiteCLass.IsCarLoanElementPresent@5bfbf16f]" name="isCarLoanElementPresent" duration-ms="6565" started-at="2020-07-03T16:26:06 IST" description="verify that CarLoan element is present" finished-at="2020-07-03T16:26:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCarLoanElementPresent -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.SmokeTestSuiteCLass.IsCarLoanElementPresent@5bfbf16f]" name="flushReports" is-config="true" duration-ms="198" started-at="2020-07-03T16:26:13 IST" finished-at="2020-07-03T16:26:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.SmokeTestSuiteCLass.IsCarLoanElementPresent -->
      <class name="com.SmokeTestSuiteCLass.TotalPaymentAmountVerify">
        <test-method status="FAIL" signature="isTotalPaymentAmountVerify(java.util.Hashtable)[pri:0, instance:com.SmokeTestSuiteCLass.TotalPaymentAmountVerify@25af5db5]" name="isTotalPaymentAmountVerify" duration-ms="8479" started-at="2020-07-03T16:26:13 IST" description="verify that total payment amount is correct" data-provider="EMICalculatorVerifyTotalPaymentAmountData" finished-at="2020-07-03T16:26:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{LoanTenure=5.0, InterestRate=12.5, expectedTotalAmount=1349876.0, CarLoanAmount=1000000.0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1349876.0] but found [2726737.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1349876.0] but found [2726737.0]
at org.testng.Assert.fail(Assert.java:97)
at com.utilities.ReportingFunctions.reportFail(ReportingFunctions.java:16)
at com.pageClasses.LandingPage.verifyTotalPaymentAmount(LandingPage.java:111)
at com.SmokeTestSuiteCLass.TotalPaymentAmountVerify.isTotalPaymentAmountVerify(TotalPaymentAmountVerify.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTotalPaymentAmountVerify -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.SmokeTestSuiteCLass.TotalPaymentAmountVerify@25af5db5]" name="flushReports" is-config="true" duration-ms="4455" started-at="2020-07-03T16:26:22 IST" finished-at="2020-07-03T16:26:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.SmokeTestSuiteCLass.TotalPaymentAmountVerify -->
      <class name="com.testClasses.EMICalculatorBaseTest">
        <test-method status="PASS" signature="emicalculator(java.util.Hashtable)[pri:0, instance:com.testClasses.EMICalculatorBaseTest@5f3a4b84]" name="emicalculator" duration-ms="16603" started-at="2020-07-03T16:26:50 IST" description="executes the complete test" data-provider="EMICalculatorTestData" finished-at="2020-07-03T16:27:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{LoanTenure=1.0, InterestRate=9.5, CarLoanAmount=1500000.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emicalculator -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.testClasses.EMICalculatorBaseTest@5f3a4b84]" name="flushReports" is-config="true" duration-ms="4193" started-at="2020-07-03T16:27:06 IST" finished-at="2020-07-03T16:27:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.testClasses.EMICalculatorBaseTest -->
      <class name="com.SmokeTestSuiteCLass.IsShareButtonWorking">
        <test-method status="PASS" signature="isShareButtonWorking(java.util.Hashtable)[pri:0, instance:com.SmokeTestSuiteCLass.IsShareButtonWorking@5bcea91b]" name="isShareButtonWorking" duration-ms="8415" started-at="2020-07-03T16:26:37 IST" description="verify that share button is working properly" data-provider="EMICalculatorTestData" finished-at="2020-07-03T16:26:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{LoanTenure=1.0, InterestRate=9.5, CarLoanAmount=1500000.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isShareButtonWorking -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.SmokeTestSuiteCLass.IsShareButtonWorking@5bcea91b]" name="flushReports" is-config="true" duration-ms="4452" started-at="2020-07-03T16:26:45 IST" finished-at="2020-07-03T16:26:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.SmokeTestSuiteCLass.IsShareButtonWorking -->
      <class name="com.SmokeTestSuiteCLass.InvalidValueBehaviour">
        <test-method status="PASS" signature="verifyDataCredibility(java.util.Hashtable)[pri:0, instance:com.SmokeTestSuiteCLass.InvalidValueBehaviour@59906517]" name="verifyDataCredibility" duration-ms="8811" started-at="2020-07-03T16:25:53 IST" description="valid input test" data-provider="EMICalculatorVerifyIncorrectValuesBehaviour" finished-at="2020-07-03T16:26:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{LoanTenure=qwerty, InterestRate=qwerty, CarLoanAmount=qwerty}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDataCredibility -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:com.SmokeTestSuiteCLass.InvalidValueBehaviour@59906517]" name="flushReports" is-config="true" duration-ms="4600" started-at="2020-07-03T16:26:02 IST" finished-at="2020-07-03T16:26:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- com.SmokeTestSuiteCLass.InvalidValueBehaviour -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
